{"name":"Nexavar","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"let buffName = \"nexavarActive\";\r\nlet buffDisplayName = \"Nexavar\";\r\nlet diceNum = 1;\r\nlet diceType = \"d8\";\r\nlet damageType = \"Precision\";\r\nlet statusEffectIcon = \"icons/svg/biohazard.svg\"; //Optional, set to null if unwanted\r\nlet entityValidFn = null; //Optional, set to null if unwanted\r\nwindow.EffectManager.Macros.ToggleBonusDamageDie(buffName, buffDisplayName, statusEffectIcon, diceNum, diceType, damageType, entityValidFn);","author":"Co9ncIPTKotj3u4k","img":"icons/svg/biohazard.svg","actorIds":[],"_id":"AVsS8CC3rjmocjuM"}
{"name":"Shield Spell","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"let char = game.user.character;\r\nlet buffName = 'shieldSpellActive';\r\nlet statusEffectIcon = 'icons/svg/mage-shield.svg';\r\nlet flavorFn = function(toggle)\r\n{\r\n\tlet dir = toggle ? 'Gains' : 'Loses';\r\n\tlet ending = toggle ? '!' : '...';\r\n\tlet flavor = `<i>${char.name} ${dir} a Shield of Magical Force${ending}</i>`;\r\n\treturn flavor;\r\n}\r\nlet dataValueFn = function(toggle, ent, currentVal)\r\n{\r\n\tlet mult = toggle ? 1 : -1;\r\n\treturn (+currentVal + mult * 1).toString();\r\n}\r\nwindow.EffectManager.Macros.ToggleAC(buffName, statusEffectIcon, flavorFn, dataValueFn);","author":"Co9ncIPTKotj3u4k","img":"icons/svg/mage-shield.svg","actorIds":[],"_id":"GdMJUN9YJTcguXeq"}
{"name":"Raise Shield","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"let char = game.user.character;\r\nlet buffName = 'shieldBlockActive';\r\nlet statusEffectIcon = 'icons/svg/shield.svg';\r\nlet flavorFn = function(toggle)\r\n{\r\n\tlet dir = toggle ? 'Raises' : 'Lowers';\r\n\tlet ending = toggle ? '!' : '...';\r\n\tlet flavor = `<i>${char.name} ${dir} Shield${ending}</i>`;\r\n\treturn flavor;\r\n}\r\nlet dataValueFn = function(toggle, ent, currentVal)\r\n{\r\n\tlet mult = toggle ? 1 : -1;\r\n\treturn (+currentVal + mult * char.data.data.attributes.shield.ac).toString();\r\n}\r\nwindow.EffectManager.Macros.ToggleAC(buffName, statusEffectIcon, flavorFn, dataValueFn);","author":"Co9ncIPTKotj3u4k","img":"icons/svg/shield.svg","actorIds":[],"_id":"SFmDfJyzmSPKt2ZB"}
{"name":"Windforce","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"let buffName = \"windforceActive\";\r\nlet buffDisplayName = \"Windforce\";\r\nlet stepUp = true;\r\nlet statusEffectIcon = \"icons/svg/windmill.svg\"; //Optional, set to null if unwanted\r\nlet entityValidFn = function (ent) //Optional, set to null if unwanted\r\n{\r\n\treturn ent.data.data.group.value == \"bow\";\r\n}\r\nwindow.EffectManager.Macros.ToggleDamageDiceStep(buffName, buffDisplayName, statusEffectIcon, stepUp, entityValidFn);","author":"Co9ncIPTKotj3u4k","img":"icons/svg/windmill.svg","actorIds":[],"_id":"bLal5fCwRdLlv6uu"}
{"name":"Toggle Rage","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"window.EffectManager.Macros.ToggleRage();","author":"Co9ncIPTKotj3u4k","img":"icons/svg/terror.svg","actorIds":[],"_id":"qp7y3zHAewY31oU4"}
{"_id":"qp7y3zHAewY31oU4","name":"Toggle Rage (Animal Instinct)","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"window.EffectManager.Macros.ToggleRage();","author":"Co9ncIPTKotj3u4k","img":"icons/svg/terror.svg","actorIds":[]}
{"_id":"GdMJUN9YJTcguXeq","name":"Shield Spell","permission":{"default":0,"Co9ncIPTKotj3u4k":3},"type":"script","flags":{},"scope":"global","command":"let char = game.user.character;\r\nlet buffName = 'shieldSpellActive';\r\nlet statusEffectIcon = 'icons/svg/mage-shield.svg';\r\nlet flavorFn = function(toggle)\r\n{\r\n\tlet dir = toggle ? 'Gains' : 'Loses';\r\n\tlet ending = toggle ? '!' : '...';\r\n\tlet flavor = `<i>${char.name} ${dir} a Shield of Magical Force${ending}</i>`;\r\n\treturn flavor;\r\n}\r\nlet dataValueFn = function(toggle, ent, currentVal)\r\n{\r\n\tlet mult = toggle ? 1 : -1;\r\n        let value = 1;\r\n\treturn (+currentVal + mult * value).toString();\r\n}\r\nwindow.EffectManager.Macros.ToggleAC(buffName, statusEffectIcon, flavorFn, dataValueFn);","author":"Co9ncIPTKotj3u4k","img":"icons/svg/mage-shield.svg","actorIds":[]}
